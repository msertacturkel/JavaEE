/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.csystem.struts.action;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.csystem.struts.form.KitapSorgulaForm;

/**
 * MyEclipse Struts Creation date: 03-19-2011
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/kitapSorgula" name="kitapSorgulaForm"
 *                input="/kitapSorgula.jsp" scope="request" validate="true"
 */
public class KitapSorgulaAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		KitapSorgulaForm kitapSorgulaForm = (KitapSorgulaForm) form;
		String kitapAd = kitapSorgulaForm.getKitapAd();
		ArrayList<Kitap> kitaplar = new ArrayList<Kitap>();
		try {
			Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
			String url = "jdbc:odbc:kitap"; // connection string
			String user = "";
			String password = "";
			Connection con = DriverManager.getConnection(url, user, password);
			String sql = "select * from kitap where kitapAd like ?";
			PreparedStatement stmt = con.prepareStatement(sql);		
			stmt.setString(1, kitapAd+"%");
			ResultSet rs = stmt.executeQuery();
			ResultSetMetaData rsmd = rs.getMetaData();
			int sutun = rsmd.getColumnCount();
			while (rs.next()) {
				Kitap kitap = new Kitap();

				kitap.setYazar(rs.getString("yazar"));
				kitap.setKitapAd(rs.getString("kitapAd"));
				kitap.setFiyat(Integer.parseInt(rs.getString("fiyat")));

				kitaplar.add(kitap);
			}
			request.setAttribute("kitaplar", kitaplar);
			return mapping.findForward("listele");
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return null;
	}
}